# -*- coding: utf-8 -*-
"""Untitled47.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1wZGAYzn2SZYNP8Uazy_TMvP0wD_GLkeV
"""

import numpy as np
import pandas as pd

from mod_poker_5 import *
from mod_fe import *
from mod_agents import *
import torch as T


def step_func(poker, a, b):
    # print(poker.obs['agent_id'], 'id')
    # print(poker.hand_ended, 'hand ended')
    if poker.obs['agent_id'] == 0 and poker.hand_ended == 0:
      obs_get = poker.player_obs(poker.obs['agent_id']).copy()
      act_get =  a.action(poker.obs['player0_options'], feature_engineering(obs_get))
      obs, rews, last_action = poker.step(act_get)
    elif poker.obs['agent_id'] == 1 and poker.hand_ended == 0:
      obs_get = poker.player_obs(poker.obs['agent_id']).copy()
      act_get =  b.action(poker.obs['player1_options'], feature_engineering_p1(obs_get))
      obs, rews, last_action = poker.step(act_get)
    else:
      obs, rews, last_action = poker.step(None)

def step_agent_func(poker, a, b):
    # print(poker.obs['agent_id'], 'id')
    # print(poker.hand_ended, 'hand ended')
    if poker.obs['agent_id'] == 0 and poker.hand_ended == 0:
      obs_get = poker.player_obs(poker.obs['agent_id']).copy()
      state = T.tensor(feature_engineering(obs_get), dtype=T.float).to(a.q_eval_1.device)
      options = T.tensor(poker.obs['player0_options'], dtype=T.long).to(a.q_eval_1.device)
      print(state)
      print(a.q_eval_1.forward(state, options))      
      act_get =  a.action(poker.obs['player0_options'], feature_engineering(obs_get))
      obs, rews, last_action = poker.step(act_get)
    elif poker.obs['agent_id'] == 1 and poker.hand_ended == 0:
      obs_get = poker.player_obs(poker.obs['agent_id']).copy()
      act_get =  b.action(poker.obs['player1_options'], feature_engineering_p1(obs_get))
      obs, rews, last_action = poker.step(act_get)
    else:
      obs, rews, last_action = poker.step(None)